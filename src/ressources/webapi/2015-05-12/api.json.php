<?php
// This file was auto-generated from sdk-root/var/www/html/vws-php/src/ressources/webapi/2015-05-12/api.json
return array ( 'metadata' => array ( 'apiVersion' => '2015-05-12', 'serviceFullName' => 'Via WebApi', 'timestampFormat' => 'iso8601', 'protocol' => 'rest-json', 'endpointPrefix' => 'webapi', 'jsonVersion' => '1.1', ), 'operations' => array ( 'GetCatalogs' => array ( 'name' => 'GetCatalogs', 'http' => array ( 'method' => 'GET', 'requestUri' => 'Catalogs', ), 'output' => array ( 'shape' => 'GetCatalogsOutput', ), ), 'DeleteCatalogById' => array ( 'name' => 'DeleteCatalogById', 'http' => array ( 'method' => 'DELETE', 'requestUri' => 'Catalogs/{Id}', ), 'input' => array ( 'shape' => 'DeleteCatalogByIdInput', ), 'output' => array ( 'shape' => 'GetCatalogByIdOutput', ), ), 'GetCatalogById' => array ( 'name' => 'GetCatalogById', 'http' => array ( 'method' => 'GET', 'requestUri' => 'Catalogs/{Id}', ), 'input' => array ( 'shape' => 'GetCatalogByIdInput', ), 'output' => array ( 'shape' => 'GetCatalogByIdOutput', ), ), 'PostCatalog' => array ( 'name' => 'PostCatalog', 'http' => array ( 'method' => 'POST', 'requestUri' => 'Catalogs', ), 'input' => array ( 'shape' => 'PostCatalogInput', ), 'output' => array ( 'shape' => 'PostCatalogOutput', ), ), 'PostCatalogs' => array ( 'name' => 'PostCatalogs', 'http' => array ( 'method' => 'POST', 'requestUri' => 'Catalogs/PostList', ), 'input' => array ( 'shape' => 'PostCatalogsInput', ), 'output' => array ( 'shape' => 'PostCatalogsOutput', ), ), 'GetProductById' => array ( 'name' => 'GetProductById', 'http' => array ( 'method' => 'GET', 'requestUri' => 'Products/{Id}', ), 'input' => array ( 'shape' => 'GetProductByIdInput', ), 'output' => array ( 'shape' => 'GetProductByIdOutput', ), ), 'GetProducts' => array ( 'name' => 'GetProducts', 'http' => array ( 'method' => 'GET', 'requestUri' => 'Products', ), 'input' => array ( 'shape' => 'GetProductsInput', ), 'output' => array ( 'shape' => 'GetProductsOutput', ), ), 'PostProduct' => array ( 'name' => 'PostProduct', 'http' => array ( 'method' => 'POST', 'requestUri' => 'Products', ), 'input' => array ( 'shape' => 'PostProductInput', ), 'output' => array ( 'shape' => 'PostProductOutput', ), ), 'DeleteLink' => array ( 'name' => 'DeleteLink', 'http' => array ( 'method' => 'DELETE', 'requestUri' => 'Products/{productForeignId}/DeleteLink/{catalogForeignId}', ), 'input' => array ( 'shape' => 'ProductDeleteLinkInput', ), 'output' => array ( 'shape' => 'ProductDeleteLinkOutput', ), ), 'CreateLink' => array ( 'name' => 'CreateLink', 'http' => array ( 'method' => 'POST', 'requestUri' => 'Products/{productForeignId}/CreateLink/{catalogForeignId}', ), 'input' => array ( 'shape' => 'ProductCreateLinkInput', ), 'output' => array ( 'shape' => 'ProductCreateLinkOutput', ), ), 'ReviseInventory' => array ( 'name' => 'ReviseInventory', 'http' => array ( 'method' => 'POST', 'requestUri' => 'ReviseInventoryStatus', ), 'input' => array ( 'shape' => 'ReviseInventoryInput', ), 'output' => array ( 'shape' => 'ReviseInventoryOutput', ), ), 'GetSalesOrdersById' => array ( 'name' => 'GetSalesOrdersById', 'http' => array ( 'method' => 'GET', 'requestUri' => 'SalesOrders/{Id}', ), 'input' => array ( 'shape' => 'GetSalesOrdersByIdInput', ), 'output' => array ( 'shape' => 'GetSalesOrdersByIdOutput', ), ), 'GetNewSalesOrders' => array ( 'name' => 'GetNewSalesOrders', 'http' => array ( 'method' => 'GET', 'requestUri' => 'SalesOrders', ), 'input' => array ( 'shape' => 'GetNewSalesOrdersInput', ), 'output' => array ( 'shape' => 'GetNewSalesOrdersOutput', ), ), 'PatchOptionalAttributes' => array ( 'name' => 'PatchOptionalAttributes', 'http' => array ( 'method' => 'PATCH', 'requestUri' => 'OptionalProductAttributes?ForeignId={ForeignId}', ), 'input' => array ( 'shape' => 'PatchOptionalAttributesInput', ), 'output' => array ( 'shape' => 'PatchOptionalAttributesOutput', ), ), 'PatchProduct' => array ( 'name' => 'PatchProduct', 'http' => array ( 'method' => 'PATCH', 'requestUri' => 'Products?ForeignId={ForeignId}', ), 'input' => array ( 'shape' => 'PatchProductInput', ), 'output' => array ( 'shape' => 'PatchProductOutput', ), ), 'DeleteProduct' => array ( 'name' => 'PatchProduct', 'http' => array ( 'method' => 'DELETE', 'requestUri' => 'Products?ForeignId={ForeignId}', ), 'input' => array ( 'shape' => 'DeleteProductInput', ), 'output' => array ( 'shape' => 'DeleteProductOutput', ), ), ), 'shapes' => array ( 'DeleteCatalogByIdInput' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'uri', 'locationName' => 'Id', ), ), 'required' => array ( 'Id', ), ), 'GetCatalogByIdInput' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'uri', 'locationName' => 'Id', ), ), 'required' => array ( 'Id', ), ), 'GetCatalogByIdOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'CatalogList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'GetCatalogsOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'CatalogList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'PostCatalogInput' => array ( 'type' => 'structure', 'required' => array ( 'Name', 'ForeignId', ), 'members' => array ( 'Name' => array ( 'shape' => 'StringMin3Max30', ), 'IsRootLevel' => array ( 'shape' => 'Boolean', ), 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'ChildCatalogs' => array ( 'shape' => 'CatalogList', ), ), ), 'PostCatalogOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'CatalogList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'PostCatalogsInput' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'PostCatalogInput', ), ), 'PostCatalogsOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'CatalogList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'Catalog' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', ), 'Name' => array ( 'shape' => 'StringMin3Max30', ), 'IsRootLevel' => array ( 'shape' => 'Boolean', ), 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'ChildCatalogs' => array ( 'shape' => 'CatalogList', ), ), ), 'CatalogList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'Catalog', ), ), 'PatchOptionalAttributesInput' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', 'Name', 'Value', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', 'location' => 'uri', 'locationName' => 'ForeignId', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'Value' => array ( 'shape' => 'StringMax255', ), ), ), 'PatchOptionalAttributesOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'OptionalAttributesList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'PatchProductInput' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', 'location' => 'uri', ), 'Title' => array ( 'shape' => 'StringMin3Max80', ), 'Description' => array ( 'shape' => 'StringNoMinMax', ), 'ShortDescription' => array ( 'shape' => 'StringMax2000', ), 'Price' => array ( 'shape' => 'Float', ), 'Ean' => array ( 'shape' => 'StringEan', ), 'Upc' => array ( 'shape' => 'StringUpc', ), 'Isbn' => array ( 'shape' => 'StringIsbn', ), 'StockAmount' => array ( 'shape' => 'IntegerMax999', ), ), ), 'PatchProductOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'GetProductsOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'Pagination' => array ( 'shape' => 'Paging', ), ), ), 'GetProductsInput' => array ( 'type' => 'structure', 'members' => array ( 'limit' => array ( 'shape' => 'IntegerMin1Max100Default100', 'location' => 'querystring', 'locationName' => 'EntriesPerPage', ), 'page' => array ( 'shape' => 'IntegerMin1NoMaxDefault1', 'location' => 'querystring', 'locationName' => 'PageNumber', ), ), ), 'ProductCreateLinkInput' => array ( 'type' => 'structure', 'members' => array ( 'productForeignId' => array ( 'shape' => 'StringNoMinMax', 'location' => 'uri', 'locationName' => 'productForeignId', ), 'catalogForeignId' => array ( 'shape' => 'Float', 'location' => 'uri', 'locationName' => 'catalogForeignId', ), ), 'required' => array ( 'productForeignId', 'catalogForeignId', ), ), 'ProductCreateLinkOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'ProductDeleteLinkInput' => array ( 'type' => 'structure', 'members' => array ( 'productForeignId' => array ( 'shape' => 'StringNoMinMax', 'location' => 'uri', 'locationName' => 'productForeignId', ), 'catalogForeignId' => array ( 'shape' => 'Float', 'location' => 'uri', 'locationName' => 'catalogForeignId', ), ), 'required' => array ( 'productForeignId', 'catalogForeignId', ), ), 'ProductDeleteLinkOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'PostProductOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'DeleteProductInput' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', 'location' => 'uri', ), ), ), 'DeleteProductOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'ProductList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'Product', ), ), 'Product' => array ( 'type' => 'structure', 'required' => array ( 'Title', 'ForeignId', 'Price', 'StockAmount', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Title' => array ( 'shape' => 'StringMin3Max80', ), 'Description' => array ( 'shape' => 'StringNoMinMax', ), 'ShortDescription' => array ( 'shape' => 'StringMax2000', ), 'Price' => array ( 'shape' => 'Float', ), 'Ean' => array ( 'shape' => 'StringEan', ), 'Upc' => array ( 'shape' => 'StringUpc', ), 'Isbn' => array ( 'shape' => 'StringIsbn', ), 'StockAmount' => array ( 'shape' => 'IntegerMax999', ), 'Images' => array ( 'shape' => 'ProductImageList', ), 'Specifics' => array ( 'shape' => 'ProductSpecificsList', ), ), ), 'GetProductByIdInput' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'uri', 'locationName' => 'Id', ), ), 'required' => array ( 'Id', ), ), 'GetProductByIdOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'ProductList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'PostProductInput' => array ( 'type' => 'structure', 'required' => array ( 'Title', 'ForeignId', 'Price', 'StockAmount', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Title' => array ( 'shape' => 'StringMin3Max80', ), 'Description' => array ( 'shape' => 'StringNoMinMax', ), 'ShortDescription' => array ( 'shape' => 'StringMax2000', ), 'Price' => array ( 'shape' => 'Float', ), 'Ean' => array ( 'shape' => 'StringEan', ), 'Upc' => array ( 'shape' => 'StringUpc', ), 'Isbn' => array ( 'shape' => 'StringIsbn', ), 'StockAmount' => array ( 'shape' => 'IntegerMax999', ), 'Images' => array ( 'shape' => 'ProductImageList', ), 'Specifics' => array ( 'shape' => 'ProductSpecificsList', ), 'Variations' => array ( 'shape' => 'ProductVariationsList', ), 'OptionalAttributes' => array ( 'shape' => 'OptionalAttributesList', ), 'UnitQuantity' => array ( 'shape' => 'Float', ), 'UnitType' => array ( 'shape' => 'String', ), ), ), 'ProductImageList' => array ( 'type' => 'list', 'maxItems' => 1, 'minItems' => 1, 'member' => array ( 'shape' => 'ProductImage', ), ), 'ProductImage' => array ( 'type' => 'structure', 'required' => array ( 'ImageUrl', 'ForeignId', 'Type', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'ImageUrl' => array ( 'shape' => 'Url', ), 'Type' => array ( 'shape' => 'IntegerMin1Max1', ), ), ), 'ProductSpecificsList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'ProductSpecific', ), ), 'ProductSpecific' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', 'Name', 'Value', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'Value' => array ( 'shape' => 'StringMax255', ), ), ), 'ProductVariationsList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'ProductVariation', ), ), 'ProductVariation' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', 'Price', 'StockAmount', 'Specifics', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Price' => array ( 'shape' => 'Float', ), 'StockAmount' => array ( 'shape' => 'IntegerNoMinMax', ), 'Sku' => array ( 'shape' => 'StringMax255', ), 'ExternalProductId' => array ( 'shape' => 'IntegerNoMinMax', ), 'Specifics' => array ( 'shape' => 'ProductVariationSpecificsList', ), ), ), 'ProductVariationSpecificsList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'ProductVariationSpecific', ), ), 'ProductVariationSpecific' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', 'Name', 'Value', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'Value' => array ( 'shape' => 'StringMax255', ), ), ), 'OptionalAttributesList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'OptionalAttribute', ), ), 'OptionalAttribute' => array ( 'type' => 'structure', 'required' => array ( 'ForeignId', 'Name', 'Value', ), 'members' => array ( 'ForeignId' => array ( 'shape' => 'StringMax255', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'Value' => array ( 'shape' => 'StringMax255', ), ), ), 'GetNewSalesOrdersInput' => array ( 'type' => 'structure', 'members' => array ( 'limit' => array ( 'shape' => 'IntegerMin1Max100Default100', 'location' => 'querystring', 'locationName' => 'EntriesPerPage', ), 'page' => array ( 'shape' => 'IntegerMin1NoMaxDefault1', 'location' => 'querystring', 'locationName' => 'PageNumber', ), ), ), 'GetNewSalesOrdersOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'SalesOrderList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'Pagination' => array ( 'shape' => 'Paging', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'GetSalesOrdersByIdInput' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'uri', 'locationName' => 'Id', ), ), 'required' => array ( 'Id', ), ), 'GetSalesOrdersByIdOutput' => array ( 'type' => 'structure', 'members' => array ( 'EntityList' => array ( 'shape' => 'SalesOrderList', ), 'Messages' => array ( 'shape' => 'MessageList', ), 'StatusCode' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'statusCode', ), ), ), 'SalesOrderList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'SalesOrder', ), ), 'SalesOrder' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', ), 'Buyer' => array ( 'shape' => 'BuyerType', ), 'SalesOrderItems' => array ( 'shape' => 'SalesOrderItemList', ), 'CreationDate' => array ( 'shape' => 'TimestampType', ), 'TotalPrice' => array ( 'shape' => 'Float', ), 'CurrencyCode' => array ( 'shape' => 'StringMax5', ), 'ItemCount' => array ( 'shape' => 'IntegerNoMinMax', ), 'TotalAmount' => array ( 'shape' => 'IntegerNoMinMax', ), 'PlatformName' => array ( 'shape' => 'StringMax50', ), 'BuyerId' => array ( 'shape' => 'IntegerNoMinMax', ), 'AddressId' => array ( 'shape' => 'IntegerNoMinMax', ), 'ShippingAddressId' => array ( 'shape' => 'IntegerNoMinMax', ), 'CheckoutStatus' => array ( 'shape' => 'IntegerMin0Max1', ), 'CheckoutCompletionDate' => array ( 'shape' => 'TimestampType', ), 'PaymentStatus' => array ( 'shape' => 'StringMax50', ), 'PaymentOption' => array ( 'shape' => 'StringMax50', ), 'ShippingService' => array ( 'shape' => 'StringMax255', ), 'BuyerCheckoutMessage' => array ( 'shape' => 'StringNoMinMax', ), 'ShippingStatus' => array ( 'shape' => 'IntegerMin0Max2', ), 'ShippingServiceCost' => array ( 'shape' => 'Float', ), 'PaymentTransactionId' => array ( 'shape' => 'StringMax255', ), 'MarkedAsPayed' => array ( 'shape' => 'Boolean', ), 'MarkedAsShipped' => array ( 'shape' => 'Boolean', ), 'ForeignOrderId' => array ( 'shape' => 'StringMax50', ), 'PaidAmount' => array ( 'shape' => 'Float', ), 'PaidDate' => array ( 'shape' => 'TimestampType', ), 'ModificationDate' => array ( 'shape' => 'TimestampType', ), 'PlatformOrderId' => array ( 'shape' => 'StringMax255', ), 'EbayModificationDate' => array ( 'shape' => 'TimestampType', ), 'BuyerPackageEnclosure' => array ( 'shape' => 'StringMax4000', ), 'Address' => array ( 'shape' => 'AddressType', ), 'ShippingAddress' => array ( 'shape' => 'AddressType', ), ), ), 'AddressType' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', ), 'Type' => array ( 'shape' => 'IntegerNoMinMax', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'Surname' => array ( 'shape' => 'StringMax255', ), 'Street' => array ( 'shape' => 'StringMax255', ), 'Addition' => array ( 'shape' => 'StringMax255', ), 'PostalCode' => array ( 'shape' => 'StringMax50', ), 'Town' => array ( 'shape' => 'StringMax255', ), 'Country' => array ( 'shape' => 'StringMax255', ), 'State' => array ( 'shape' => 'StringMax255', ), 'Salutation' => array ( 'shape' => 'StringMax255', ), 'Phone' => array ( 'shape' => 'StringMax255', ), 'Email' => array ( 'shape' => 'StringMax255', ), ), ), 'BuyerType' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', ), 'BuyerName' => array ( 'shape' => 'StringMax255', ), ), ), 'SalesOrderItemList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'SalesOrderItem', ), ), 'SalesOrderItem' => array ( 'type' => 'structure', 'members' => array ( 'Id' => array ( 'shape' => 'IntegerNoMinMax', ), 'SalesOrderId' => array ( 'shape' => 'IntegerNoMinMax', ), 'CreationDate' => array ( 'shape' => 'TimestampType', ), 'Amount' => array ( 'shape' => 'IntegerNoMinMax', ), 'Price' => array ( 'shape' => 'Float', ), 'CurrencyCode' => array ( 'shape' => 'StringMax5', ), 'Name' => array ( 'shape' => 'StringMax255', ), 'PlatformName' => array ( 'shape' => 'StringMax50', ), 'ShippingStatus' => array ( 'shape' => 'IntegerMin0Max1', ), 'TrackingNumbers' => array ( 'shape' => 'StringMax255', ), 'CarrierUsed' => array ( 'shape' => 'StringMax255', ), 'ProductId' => array ( 'shape' => 'IntegerNoMinMax', ), 'ForeignId' => array ( 'shape' => 'IntegerNoMinMax', ), 'TransactionId' => array ( 'shape' => 'IntegerNoMinMax', ), 'PlatformItemId' => array ( 'shape' => 'IntegerNoMinMax', ), 'ShippingDate' => array ( 'shape' => 'TimestampType', ), 'FeedbackStatus' => array ( 'shape' => 'IntegerNoMinMax', ), 'ModificationDate' => array ( 'shape' => 'TimestampType', ), 'PlatformOrderId' => array ( 'shape' => 'StringMax255', ), 'SalesDate' => array ( 'shape' => 'TimestampType', ), ), ), 'MessageList' => array ( 'type' => 'list', 'member' => array ( 'shape' => 'Message', ), ), 'Message' => array ( 'type' => 'structure', 'members' => array ( 'Code' => array ( 'shape' => 'StringMax255', ), 'Severity' => array ( 'shape' => 'StringMax255', ), 'Message' => array ( 'shape' => 'StringMax2000', ), 'Description' => array ( 'shape' => 'StringMax2000', ), ), ), 'Paging' => array ( 'type' => 'structure', 'members' => array ( 'EntriesPerPage' => array ( 'shape' => 'IntegerNoMinMax', ), 'PageNumber' => array ( 'shape' => 'IntegerNoMinMax', ), 'TotalNumberOfPages' => array ( 'shape' => 'IntegerNoMinMax', ), 'TotalNumberOfEntries' => array ( 'shape' => 'IntegerNoMinMax', ), 'HasPreviousPage' => array ( 'shape' => 'Boolean', ), 'HasNextPage' => array ( 'shape' => 'Boolean', ), ), ), 'ReviseInventoryInput' => array ( 'type' => 'structure', 'members' => array ( 'productId' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'querystring', 'locationName' => 'productId', ), 'price' => array ( 'shape' => 'Float', 'location' => 'querystring', 'locationName' => 'price', ), 'stockAmount' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'querystring', 'locationName' => 'stockAmount', ), 'productVariationId' => array ( 'shape' => 'IntegerNoMinMax', 'location' => 'querystring', 'locationName' => 'productVariationId', ), 'discountOfferPrice' => array ( 'shape' => 'Float', 'location' => 'querystring', 'locationName' => 'discountOfferPrice', ), ), 'required' => array ( 'productId', ), ), 'Boolean' => array ( 'type' => 'boolean', ), 'Float' => array ( 'type' => 'float', ), 'String' => array ( 'type' => 'string', ), 'IntegerNoMinMax' => array ( 'type' => 'integer', ), 'IntegerMin0Max1' => array ( 'type' => 'integer', 'min' => 0, 'max' => 1, ), 'IntegerMin0Max2' => array ( 'type' => 'integer', 'min' => 0, 'max' => 2, ), 'IntegerMin1Max1' => array ( 'type' => 'integer', 'min' => 1, 'max' => 1, ), 'IntegerMin1Max100Default100' => array ( 'type' => 'integer', 'min' => 1, 'max' => 100, 'default' => 50, ), 'IntegerMin1NoMaxDefault1' => array ( 'type' => 'integer', 'min' => 1, 'default' => 1, ), 'IntegerMax999' => array ( 'type' => 'integer', 'min' => 0, 'max' => 999, ), 'StringEan' => array ( 'type' => 'string', 'pattern' => '#\\b[\\d\\-]{3,18}\\b#', ), 'StringUpc' => array ( 'type' => 'string', 'pattern' => '#^(\\d{8}|\\d{12,14})$#', ), 'StringIsbn' => array ( 'type' => 'string', 'pattern' => '#\\b(?:ISBN(?:: ?| ))?((?:97[89])?\\d{9}[\\dx])\\b#i', ), 'StringNoMinMax' => array ( 'type' => 'string', ), 'StringMin3Max30' => array ( 'type' => 'string', 'min' => 3, 'max' => 30, ), 'StringMin3Max80' => array ( 'type' => 'string', 'min' => 3, 'max' => 80, ), 'StringMax5' => array ( 'type' => 'string', 'min' => 1, 'max' => 5, ), 'StringMax50' => array ( 'type' => 'string', 'min' => 1, 'max' => 50, ), 'StringMax2000' => array ( 'type' => 'string', 'max' => 2000, ), 'StringMax255' => array ( 'type' => 'string', 'max' => 255, ), 'StringMax4000' => array ( 'type' => 'string', 'max' => 4000, ), 'TimestampType' => array ( 'type' => 'timestamp', ), 'Url' => array ( 'type' => 'string', 'max' => 255, 'pattern' => '#^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$#', 'filters' => array ( 0 => array ( 'method' => 'Respect\\Validation\\Validator::url', 'args' => array ( true, '@value', ), ), ), ), ),);